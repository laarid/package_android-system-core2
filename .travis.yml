dist: trusty
sudo: required
services:
- docker
language: cpp

env:
  matrix:
  - BUILD_FLAVOR=amd64_deb
  - BUILD_FLAVOR=amd64_distcheck
  - BUILD_FLAVOR=arm64_deb
  - BUILD_FLAVOR=arm64_distcheck
  - BUILD_FLAVOR=armel_deb
  - BUILD_FLAVOR=armel_distcheck
  - BUILD_FLAVOR=armhf_deb
  - BUILD_FLAVOR=armhf_distcheck
  - BUILD_FLAVOR=i386_deb
  - BUILD_FLAVOR=i386_distcheck
  - BUILD_FLAVOR=mips_deb
  - BUILD_FLAVOR=mips_distcheck
  - BUILD_FLAVOR=mips64el_deb
  - BUILD_FLAVOR=mips64el_distcheck
  - BUILD_FLAVOR=mipsel_deb
  - BUILD_FLAVOR=mipsel_distcheck
  - BUILD_FLAVOR=ppc64el_deb
  - BUILD_FLAVOR=ppc64el_distcheck
  - BUILD_FLAVOR=s390x_deb
  - BUILD_FLAVOR=s390x_distcheck
  global:
  - DOCKER_EXEC_ROOT="sudo docker exec --interactive --tty --user root test_container"
  - DOCKER_EXEC="sudo docker exec --interactive --tty test_container"
  - DOCKER_EXEC_NOTTY="sudo docker exec test_container"
  - BINTRAY_USER=laarid
  - BINTRAY_REPO=main
  - BINTRAY_COMPONENT=main
  - BINTRAY_DESC="Android system core libraries"
  - BUILD_STAGE=2

matrix:
  fast_finish: true
  allow_failures:
  - env: BUILD_FLAVOR=mips64el_deb
  - env: BUILD_FLAVOR=armel_deb
  - env: BUILD_FLAVOR=armel_distcheck
  - env: BUILD_FLAVOR=s390x_deb
  - env: BUILD_FLAVOR=s390x_distcheck

branches:
  only:
  - master
  - /^v\d+\.\d+\.\d+/

addons:
  apt:
    sources:
    - sourceline: 'deb http://archive.ubuntu.com/ubuntu/ devel universe'
    packages:
    - binfmt-support
    - qemu-user-static

cache:
- apt

before_install:
- sudo docker pull laarid/devel:${BUILD_FLAVOR%_*}
- sudo docker images
- |
  sudo docker run --detach --interactive --tty \
    --name test_container \
    --volume ${TRAVIS_BUILD_DIR%${TRAVIS_REPO_SLUG}}:${TRAVIS_BUILD_DIR%${TRAVIS_REPO_SLUG}} \
    --workdir ${TRAVIS_BUILD_DIR} \
    --add-host dl.bintray.com:$(nslookup dl.bintray.com | grep -m1 -A1 Name: | grep Address: | awk '{print $2}') \
    laarid/devel:${BUILD_FLAVOR%_*} \
    /bin/bash

install:
- ${DOCKER_EXEC_ROOT} apt-get update -qq
- |
  ${DOCKER_EXEC_ROOT} \
    env "DEB_BUILD_PROFILES=pkg.$(cat debian/control | grep ^Source: | awk '{print $2}').stage${BUILD_STAGE}" \
    mk-build-deps --install --remove \
      --root-cmd sudo \
      --tool 'apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y --allow-unauthenticated'

script:
- |
  case "${BUILD_FLAVOR#*_}" in
    deb)
      ${DOCKER_EXEC} env "DEB_BUILD_PROFILES=pkg.$(cat debian/control | grep ^Source: | awk '{print $2}').stage${BUILD_STAGE} nocheck" "DEB_BUILD_OPTIONS=nocheck" debuild -i -us -uc -b;
      ;;
    distcheck)
      ${DOCKER_EXEC} /bin/sh -c "(mkdir build && cd build && autoreconf -i --warnings=all .. && ../configure --build=\$(dpkg-architecture -qDEB_BUILD_GNU_TYPE) --host=\$(dpkg-architecture -qDEB_HOST_GNU_TYPE) --with-stage=${BUILD_STAGE} --disable-dependency-tracking && make -j \$(nproc) .gitignore distcheck)";
      ;;
  esac
- git status
- git status | grep 'working tree clean'

before_deploy:
- |
  cat debian/bintray.json.in | \
    sed -e "s#@BINTRAY_PACKAGE@#$(cat debian/control | grep ^Source: | awk '{print $2}')#g" \
        -e "s#@BINTRAY_USER@#${BINTRAY_USER}#g" \
        -e "s#@BINTRAY_REPO@#${BINTRAY_REPO}#g" \
        -e "s#@BINTRAY_DESC@#${BINTRAY_DESC}#g" \
        -e "s#@GITHUB_REPO@#${TRAVIS_REPO_SLUG}#g" \
        -e "s,@BINTRAY_VERSION@,${TRAVIS_TAG#v},g" \
        -e "s#@BINTRAY_RELEASE_DATE@#$(cat debian/changelog | grep -m 1 '^ -- ' | sed 's,^.*  ,,')#g" \
        -e "s#@BINTRAY_OUTDIR@#$(dirname ${TRAVIS_BUILD_DIR})#g" \
        -e "s#@BINTRAY_POOLABBR@#$(cat debian/control | grep ^Source: | awk '{print $2}' | cut -c1)#g" \
        -e "s#@BINTRAY_SUITE@#$(${DOCKER_EXEC_NOTTY} cat /etc/apt/sources.list | grep -m 1 '^deb ' | awk '{print $3}')#g" \
        -e "s#@BINTRAY_COMPONENT@#${BINTRAY_COMPONENT}#g" \
        -e "s#@BINTRAY_ARCH@#$(${DOCKER_EXEC_NOTTY} dpkg --print-architecture)#g" | \
    tee debian/bintray.json

deploy:
- provider: bintray
  file: debian/bintray.json
  user: vicamo
  key:
    secure: "iOuKUV8xjHxjzpH/pyIRTdQBfJ8XP70YvJdbgOtVidNmzKbcsYQ+znFLK4VIN7bsFr9hUTdLayGtDxs5TyTfJp6UDIoeSS9wmpZlcM3r1PQEJVa6eo+LH72ukUTGIuDKZfdTAXEvlb8KnB7g0AGAgnb88VETVi5I9bfuciZLXO7VUdQ1utP2y/i2DUnmIdP0GG7S2SqmJ5lVHEvViGLbj7FD/8xVgqUdtMiIknq/79U2biGQHRWBftiojoNtjz+v5La80xZE4OXlCGkT7kV/YrbcKZ62rjaNRwImJ/tvLyL8VTmJGvH0ywS6Jk8odkSs1aCFBhdPJADtXtnEs9sReMOzZ0FtD/tuqMcWWhDv0JpnR/0uAsHwqST3MvOQBE7S6kmJgb5892GW45knp8WgyQ/rcPqbT2gnYom6vtO88RzGaLurq7fGd4Mx1Y9R/PD9ED6qwvOWeJeoZ9+L8PnKiiv0hjKBce2cXMu1fLSaqqbPYYARFXnEqcCBMcNE5vCU5CStOsTqjW3Z1Bj+0Dh6VyGskMaIzSgN37XsKpv4CGmMnL9k2VG4B4tm4DI6AQ9NKSo7NqghX8CsgQJtuAegz9du0a5AgWSSednBw1WYva1Y3+I903qBOxzs4V5RhDHXtjGU9Ac+0dwRjl/eXm3HwKhd7NTOkmBxcsHoEGYfj1w="
  on:
    tags: true
    condition: ${BUILD_FLAVOR#*_} = deb

notifications:
  slack:
    rooms:
    - secure: "dcWbMytHzTRnyaS3EAc1Yj4cwK6p/0hpWwTk2NR6or8sPuvl6BI1rMe23IpufFZYc4DaYVqbh6V8HXB3dbWdTsdE2Knr2ntQs/WtjBIOW8TuaphbMrMCghrCr/+T/oigQ2mbfFCPGo/mlaquGtdg7v4ZmggPdEPG6z8sZhrf3K+FP4uvNMOZ0+4pXJG88SRmovWELC4qUvn0K1CoQXcr1EFxXiD4Xb5s7umGT8vw1TaydwtTZgi6st7mB3/TPX68LSYIQfYPanAOQqQo+b44f10CrPFsrN77sq6CzMrp35VpCwKlhputL8KPn7xNclMgRKZSOsKSPzj1tQicPlo87Mbj4Z8LJR+Kd3lFGToqFtFvEBxhagDdrVQKaTsxrtYTO25Va2F4R9sYPKAwetPRROWQw1OYRrlAopvrh2jEY7DUP88TxLH9er0i+HrXKZiktisu/FUsJnEhD26HVjEKDO3f2NFiUI0ilb4tVLaOxXWR8QU0bfh9vfLCFrE6uH3EMs9S5tWvFAhuYmIuuVbZ3pyLU8vIhWeob/OnN8iNjIU5DAHHdfp3simHA0GXz/3UnWwkjcG7XBkMgozBztqYaOpSq00XJvgs6f22hj976jth/xt9AkIzvnUl25HZoal+4P0hlDisU/hMa8wgvLJH51rZKa4qoyohoIRhbY6ZIGk="
